/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Work Log API
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  RequestWorkLog,
  WorkLog,
  WorkLogAggregation,
  WorkLogApiListParams
} from './model';




  export const getWorkLogAPI = () => {
/**
 * WorkLog „ÅÆ‰∏ÄË¶ß„ÇíÂèñÂæó
 */
const workLogApiList = <TData = AxiosResponse<WorkLogAggregation>>(
    params: WorkLogApiListParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/worklogs`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * WorkLog „Çí‰ΩúÊàê
 */
const workLogApiCreate = <TData = AxiosResponse<WorkLog>>(
    requestWorkLog: RequestWorkLog, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/worklogs`,
      requestWorkLog,options
    );
  }

/**
 * WorkLog „ÇíÂèñÂæó
 */
const workLogApiRead = <TData = AxiosResponse<WorkLog>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/worklogs/${id}`,options
    );
  }

/**
 * WorkLog „ÇíÊõ¥Êñ∞
 */
const workLogApiUpdate = <TData = AxiosResponse<WorkLog>>(
    id: number,
    requestWorkLog: RequestWorkLog, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/worklogs/${id}`,
      requestWorkLog,options
    );
  }

/**
 * WorkLog „ÇíÂâäÈô§
 */
const workLogApiDelete = <TData = AxiosResponse<void>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/worklogs/${id}`,options
    );
  }

return {workLogApiList,workLogApiCreate,workLogApiRead,workLogApiUpdate,workLogApiDelete}};
export type WorkLogApiListResult = AxiosResponse<WorkLogAggregation>
export type WorkLogApiCreateResult = AxiosResponse<WorkLog>
export type WorkLogApiReadResult = AxiosResponse<WorkLog>
export type WorkLogApiUpdateResult = AxiosResponse<WorkLog>
export type WorkLogApiDeleteResult = AxiosResponse<void>
