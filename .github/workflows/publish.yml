name: publish-and-release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------- Node.js setup ----------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ./.node-version
          registry-url: https://npm.pkg.github.com/
          scope: "@moriguin"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit fix & commit
        run: |
          npm audit fix || true
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package-lock.json
          if ! git diff --cached --quiet; then
            git commit -m "chore: audit fix"
            git push
          else
            echo "No audit changes to commit."
          fi

      # ---------- Code Generation ----------
      - name: Run TypeSpec compile & Orval
        run: |
          npm run tsp:compile
          npm run orval

      - name: Build TypeScript
        run: npm run build

      - name: Generate Kotlin code from openapi.yaml
        run: |
          npx openapi-generator-cli generate \
            -i ./tsp-output/schema/openapi.yaml \
            -g kotlin-spring \
            -o ./build/generated \
            --additional-properties=interfaceOnly=true,useTags=true,useJakartaEe=true,javaxPackage=jakarta,apiPackage=com.moriguin.worklog.generated.api,modelPackage=com.moriguin.worklog.generated.model

      # ---------- npm & Maven Publish ----------
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: gradle

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Check version match between package.json and gradle.properties
        run: |
          JS_VERSION=$(node -p "require('./package.json').version")
          GRADLE_VERSION=$(grep '^version=' gradle.properties | cut -d= -f2 | tr -d '\r\n')
          echo "package.json version: $JS_VERSION"
          echo "gradle.properties version: $GRADLE_VERSION"
          if [ "$JS_VERSION" != "$GRADLE_VERSION" ]; then
            echo "❌ Version mismatch! package.json=$JS_VERSION vs gradle.properties=$GRADLE_VERSION"
            exit 1
          else
            echo "✅ Version match confirmed."
          fi

      - name: Publish to GitHub Packages (npm)
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_GITHUB_PAT }}

      - name: Publish to GitHub Packages (Maven)
        run: ./gradlew publish
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.PUBLISH_GITHUB_PAT }}

      # ---------- Tag published version ----------
      - name: Tag published version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          VERSION=$(node -p "require('./package.json').version")
          git tag v$VERSION
          git push origin master --follow-tags

      # ---------- Bump to next patch version ----------
      - name: Bump to next patch version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          NEXT_VERSION=$(npm version patch --no-git-tag-version)
          sed -i "s/^version=.*/version=${NEXT_VERSION#v}/" gradle.properties
          git add package.json package-lock.json gradle.properties
          git commit -m "chore: prepare next version ${NEXT_VERSION}"
          git push origin master
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_GITHUB_PAT }}
