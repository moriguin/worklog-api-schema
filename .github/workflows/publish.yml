name: Publish to GitHub Packages

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ────────────── npm 用 ──────────────
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ./.node-version
          registry-url: https://npm.pkg.github.com/
          scope: "@moriguin"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit fix
        run: npm audit fix || true

      - name: Commit audit fixes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package-lock.json
          git add package-lock.json
          if ! git diff --cached --quiet; then
            git commit -m "chore: audit fix"
            git push
          else
            echo "No changes to commit."
          fi

      # ────────────── スキーマ・クライアント生成処理 ──────────────
      - name: Run TypeSpec compile & Orval
        run: |
          npm run tsp:compile
          npm run orval

      - name: Generate Kotlin code from openapi.yaml
        run: |
          npx openapi-generator-cli generate \
            -i ./tsp-output/schema/openapi.yaml \
            -g kotlin-spring \
            -o ./build/generated \
            --additional-properties=interfaceOnly=true,useTags=true,useJakartaEe=true,javaxPackage=jakarta,apiPackage=com.moriguin.worklog.generated.api,modelPackage=com.moriguin.worklog.generated.model

      - name: Commit generated code
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "chore: generate OpenAPI client/server code"
            git push
          else
            echo "No generated code changes to commit."
          fi

      # ────────────── バージョン更新とnpm公開 ──────────────
      - name: Bump patch version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin master
          npm version patch
          git push --follow-tags
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_GITHUB_PAT }}

      - name: Publish to GitHub Packages (npm)
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_GITHUB_PAT }}

      # ────────────── Gradle (Maven) 用 ──────────────
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "gradle"

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      # releaseタスクでYou have uncommitted filesになるため、コミットしておく
      - name: Ensure gradlew is executable and committed
        run: |
          chmod +x ./gradlew
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add gradlew
          if ! git diff --cached --quiet; then
            git commit -m "chore: ensure gradlew is executable"
            git push
          else
            echo "gradlew already in correct state."
          fi

      - name: Run Gradle release task
        run: ./gradlew release -Prelease.useAutomaticVersion=true
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_GITHUB_PAT }}

      - name: Publish to GitHub Packages (Maven)
        run: ./gradlew publish
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.PUBLISH_GITHUB_PAT }}
